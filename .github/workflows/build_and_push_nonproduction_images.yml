name: Build and Push Non-Production Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      enable_env_var_debugging:  # Optional debugging parameter useful to debug the build args and env vars
        description: 'Enable build args & env vars debugging'  # Help text shown in UI
        required: false  # Not required to run the workflow
        default: false   # Disabled by default
        type: boolean    # Simple checkbox in the UI

env:
  REGISTRY: ghcr.io
  ORG_NAME: refactor-group
  REPO_NAME: refactor-platform-fe

jobs:
  build_and_push_amd64:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Image Tag
        id: vars
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
          IMAGE_BASE="${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/${BRANCH_NAME}"
          echo "tag=${IMAGE_BASE}:amd64" >> $GITHUB_OUTPUT

      - name: Build + Push AMD64
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: runner
          platforms: linux/amd64
          push: true
          provenance: true
          sbom: true
          build-args: |
            NEXT_PUBLIC_BACKEND_SERVICE_PROTOCOL=${{ vars.BACKEND_SERVICE_PROTOCOL }}
            NEXT_PUBLIC_BACKEND_SERVICE_HOST=${{ vars.BACKEND_SERVICE_HOST }}
            NEXT_PUBLIC_BACKEND_SERVICE_PORT=${{ vars.BACKEND_PORT }}
            NEXT_PUBLIC_BACKEND_API_VERSION=${{ vars.BACKEND_API_VERSION }}
            FRONTEND_SERVICE_PORT=${{ vars.FRONTEND_SERVICE_PORT }}
            FRONTEND_SERVICE_INTERFACE=${{ vars.FRONTEND_SERVICE_INTERFACE }}
          tags: ${{ steps.vars.outputs.tag }}
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,mode=max,scope=amd64

  build_and_push_arm64:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Image Tag
        id: vars
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}
          IMAGE_BASE="${{ env.REGISTRY }}/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/${BRANCH_NAME}"
          echo "tag=${IMAGE_BASE}:arm64" >> $GITHUB_OUTPUT

      - name: Build + Push ARM64
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: runner
          platforms: linux/arm64
          push: true
          provenance: true
          sbom: true
          build-args: |
            NEXT_PUBLIC_BACKEND_SERVICE_PROTOCOL=${{ vars.BACKEND_SERVICE_PROTOCOL }}
            NEXT_PUBLIC_BACKEND_SERVICE_HOST=${{ vars.BACKEND_SERVICE_HOST }}
            NEXT_PUBLIC_BACKEND_SERVICE_PORT=${{ vars.BACKEND_PORT }}
            NEXT_PUBLIC_BACKEND_API_VERSION=${{ vars.BACKEND_API_VERSION }}
            FRONTEND_SERVICE_PORT=${{ vars.FRONTEND_SERVICE_PORT }}
            FRONTEND_SERVICE_INTERFACE=${{ vars.FRONTEND_SERVICE_INTERFACE }}
          tags: ${{ steps.vars.outputs.tag }}
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64

      - name: Debug Environment Variables
        if: ${{ inputs.enable_env_var_debugging == true }}  # Only run when debugging is enabled
        run: |
          echo "Building with the following environment variables:" && \
          echo "NEXT_PUBLIC_BACKEND_SERVICE_PROTOCOL: ${NEXT_PUBLIC_BACKEND_SERVICE_PROTOCOL}" && \
          echo "NEXT_PUBLIC_BACKEND_SERVICE_HOST: ${NEXT_PUBLIC_BACKEND_SERVICE_HOST}" && \
          echo "NEXT_PUBLIC_BACKEND_SERVICE_PORT: ${NEXT_PUBLIC_BACKEND_SERVICE_PORT}" && \
          echo "NEXT_PUBLIC_BACKEND_API_VERSION: ${NEXT_PUBLIC_BACKEND_API_VERSION}" && \
          echo "FRONTEND_SERVICE_INTERFACE: ${FRONTEND_SERVICE_INTERFACE}" && \
          echo "FRONTEND_SERVICE_PORT: ${FRONTEND_SERVICE_PORT}"
